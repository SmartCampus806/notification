from datetime import datetime

booking = {
	"action": "CREATE",
	"booking": {
		"id": 2,
		"room": {
			"id": 1,
			"value": "Room1"
		},
		"owner": {
			"id": 2,
			"value": "aaaaAAAAAA"
		},
		"startTime": "2023-11-04T09:30:00.000Z",
		"endTime": "2023-11-04T10:50:00.000Z",
		"title": "–õ–µ–∫—Ü–∏—è –ø–æ –ú–∞—Ç. –ê–Ω–∞–ª–∏–∑—É",
		"description": "–ë–æ–ª—å—à–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
		"tags": [
			{
				"id": 1,
				"fullName": "–õ–µ–∫—Ü–∏—è",
				"shortName": "–õ–ö",
				"color": "#FFFFFF"
			},
			{
				"id": 2,
				"fullName": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ",
				"shortName": "–î–ü",
				"color": "#FFFFFF"
			}
		],
		"groups": [
			{
				"id": 1,
				"name": "M80-410–ë-20"
			},
			{
				"id": 2,
				"name": "–ú80-110–ú-19"
			}
		],
		"staff": [
			{
				"id": 2,
				"fullName": "aaaaAAAAAA",
				"phoneNumber": "+79297040000",
				"role": "ADMINISTRATOR",
				"isAccountLocked": False
			},
			{
				"id": 3,
				"fullName": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
				"phoneNumber": "+79297040001",
				"role": "ADMINISTRATOR",
				"isAccountLocked": False
			}
		],
		"status": "CONFIRMED"
	}
}



def make_message(booking_data:dict):
    normalize_data(booking=booking_data)
    get_title_from_action(booking=booking_data)

    booking = booking_data.get("booking", {})
    action_text = booking_data.get("action_text", "–î–∞–Ω–Ω—ã–µ –ø–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –∏–∑–º–µ–Ω–∏–ª–∏—Å—å")
    room = booking.get("room", {}).get("value", "")
    owner = booking.get("owner", {}).get("value", "")
    date = booking.get("date")
    start_time = booking.get("startTime", "")
    end_time = booking.get("endTime", "")
    title = booking.get("title", "")
    description = booking.get("description", "")
    status = booking.get("status", "")
    
    tags = ", ".join(tag.get("fullName", "") for tag in booking.get("tags", []))
    groups = ", ".join(group.get("name", "") for group in booking.get("groups", []))
    staff = ", ".join(f"{staff['fullName']}" for staff in booking.get("staff", []))
    
    message =   f"üìÖ **{action_text}** üìÖ\n\n" \
                f"–ê—É–¥–∏—Ç–æ—Ä–∏—è: {room}\n" \
                f"–í–ª–∞–¥–µ–ª–µ—Ü –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {owner}\n" \
                f"–î–∞—Ç–∞: {date}\n" \
                f"–î–∞—Ç–∞: {date}\n" \
                f"–í—Ä–µ–º –Ω–∞—á–∞–ª–∞: {start_time}\n" \
                f"–í—Ä–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è: {end_time}\n" \
                f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}\n" \
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                f"–¢–µ–≥–∏: {tags}\n" \
                f"–ì—Ä—É–ø–ø—ã: {groups}\n" \
                f"–£—á–∞—Å–Ω–∏–∫–∏: {staff}\n" \
                f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status}\n"
              
    return message

months = ["–Ø–Ω–≤–∞—Ä—è", "–§–µ–≤—Ä–∞–ª—è", "–ú–∞—Ä—Ç–∞", "–ê–ø—Ä–µ–ª—è", "–ú–∞—è", "–ò—é–Ω—è", "–ò—é–ª—è", "–ê–≤–≥—É—Å—Ç–∞", "–°–µ–Ω—Ç—è–±—Ä—è", "–û–∫—Ç—è–±—Ä—è", "–ù–æ—è–±—Ä—è", "–î–µ–∫–∞–±—Ä—è"]
def normalize_data(booking: dict):
    start_time_obj = datetime.fromisoformat(booking.get("booking").get("startTime").replace('Z', '+00:00'))
    end_time_obj = datetime.fromisoformat(booking.get("booking").get("endTime").replace('Z', '+00:00'))

    date = start_time_obj.date()

    booking["booking"]["startTime"] = start_time_obj.time().strftime('%H:%M')
    booking["booking"]["endTime"]   = end_time_obj.time().strftime('%H:%M')
    booking["booking"]["date"]      = f"{date.day} {months[date.month]} {date.year}"
    

def get_title_from_action(booking: dict):
    if (booking.get("action") == "CREATE"):
        booking["action_text"] = "–ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–µ"

    if (booking.get("action") == "UPDATE"):
        booking["action_text"] = "–ú–µ—Ä–ø—Ä–∏—è—Ç–∏–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ"

    if (booking.get("action") == "DELETE"):
        booking["action_text"] = "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!!!"
        
print(make_message(booking_data=booking))


